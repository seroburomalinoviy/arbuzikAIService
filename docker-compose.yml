version: '3'
services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - '5432:5432'
    restart: always
    volumes:
      - $HOME/postgresql/data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    container_name: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBIT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_PASSWORD}
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
    ports:
      - "15672:15672"
      - "5672:5672"

  bot:
    build: .
    container_name: bot
    command: sh -c 'python django_bot/start_bot.py'
    depends_on:
      - rabbitmq
      - postgres
    restart:
      always

  django:
    build: .
    container_name: django
    command: sh -c 'cd django_bot &&
      python manage.py makemigrations bot && 
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:3000'
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - bot
    restart:
      always
    env_file:
      - .env

  redis:
    build: .
    container_name: redis
    command:
      sh -c 'python test_redis.py'
    ports:
      - "6379:6379"
    depends_on:
      - bot
    restart:
      always
    env_file:
      - .env





